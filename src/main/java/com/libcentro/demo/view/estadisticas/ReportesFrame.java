package com.libcentro.demo.view.estadisticas;

import com.intellij.uiDesigner.core.GridConstraints;
import com.intellij.uiDesigner.core.GridLayoutManager;
import com.intellij.uiDesigner.core.Spacer;

import javax.swing.*;
import javax.swing.border.TitledBorder;
import javax.swing.plaf.FontUIResource;
import javax.swing.text.StyleContext;
import java.awt.*;
import java.util.Locale;

public class ReportesFrame extends JFrame {

    private JPanel reportesPanel;
    private JButton ventasButton;
    private JButton productosButton;
    private JButton historialButton;
    private JButton informacionButton;
    private JButton okButton;
    private JPanel contenidoPane;
    private JLabel pestanaLabel;
    private JButton generarGraficaButton;
    private JButton contabilizarButton;
    private JComboBox periodoBox;
    private JPanel graphPane;
    private JTextField codigoField;
    private JTable tablaCount;


    public ReportesFrame (){
        setContentPane (reportesPanel);
        setSize (1360, 768);
        setResizable (false);
        setLocationRelativeTo (null);
        setFocusable (true);
    }

    public JPanel getGraphPane (){
        return graphPane;
    }

    public JButton getProductosButton (){
        return productosButton;
    }

    public JButton getGananciasButton (){
        return historialButton;
    }

    public JButton getInformacionButton (){
        return informacionButton;
    }

    public JButton getVentasButton (){
        return ventasButton;
    }

    public JButton getOkButton (){
        return okButton;
    }

    public JButton getContabilizarButton (){
        return contabilizarButton;
    }

    public JButton getGenerarGraficaButton (){
        return generarGraficaButton;
    }

    public JLabel getPestanaLabel (){
        return pestanaLabel;
    }

    public JComboBox getPeriodoBox (){
        return periodoBox;
    }

    public JTextField getCodigoField (){
        return codigoField;
    }

    public void setGraphPane ( JPanel graphPane ){
        this.graphPane = graphPane;
    }

    public JTable getTablaCount (){
        return tablaCount;
    }


    {
// GUI initializer generated by IntelliJ IDEA GUI Designer
// >>> IMPORTANT!! <<<
// DO NOT EDIT OR ADD ANY CODE HERE!
        $$$setupUI$$$ ();
    }

    /**
     * Method generated by IntelliJ IDEA GUI Designer
     * >>> IMPORTANT!! <<<
     * DO NOT edit this method OR call it in your code!
     *
     * @noinspection ALL
     */
    private void $$$setupUI$$$ (){
        reportesPanel = new JPanel ();
        reportesPanel.setLayout (new BorderLayout (5, 5));
        reportesPanel.setBackground (new Color (-1));
        final JPanel panel1 = new JPanel ();
        panel1.setLayout (new GridLayoutManager (1, 1, new Insets (0, 0, 0, 0), -1, -1));
        panel1.setBackground (new Color (-1));
        reportesPanel.add (panel1, BorderLayout.NORTH);
        final JLabel label1 = new JLabel ();
        label1.setBackground (new Color (-1));
        label1.setForeground (new Color (-16777216));
        label1.setText ("Reportes");
        panel1.add (label1, new GridConstraints (0, 0, 1, 1, GridConstraints.ANCHOR_CENTER, GridConstraints.FILL_NONE, GridConstraints.SIZEPOLICY_FIXED, GridConstraints.SIZEPOLICY_FIXED, null, null, null, 0, false));
        final JPanel panel2 = new JPanel ();
        panel2.setLayout (new GridLayoutManager (1, 1, new Insets (0, 5, 5, 0), -1, -1));
        panel2.setBackground (new Color (-1));
        reportesPanel.add (panel2, BorderLayout.SOUTH);
        okButton = new JButton ();
        okButton.setBackground (new Color (-12406529));
        okButton.setForeground (new Color (-1));
        okButton.setText ("Ok");
        panel2.add (okButton, new GridConstraints (0, 0, 1, 1, GridConstraints.ANCHOR_EAST, GridConstraints.FILL_NONE, GridConstraints.SIZEPOLICY_CAN_SHRINK | GridConstraints.SIZEPOLICY_CAN_GROW, GridConstraints.SIZEPOLICY_FIXED, null, null, null, 0, false));
        final JPanel panel3 = new JPanel ();
        panel3.setLayout (new GridLayoutManager (2, 2, new Insets (0, 0, 0, 0), -1, -1));
        panel3.setBackground (new Color (-1));
        reportesPanel.add (panel3, BorderLayout.CENTER);
        final JPanel panel4 = new JPanel ();
        panel4.setLayout (new GridLayoutManager (4, 1, new Insets (0, 5, 0, 0), -1, -1));
        panel4.setBackground (new Color (-1));
        panel3.add (panel4, new GridConstraints (0, 0, 2, 1, GridConstraints.ANCHOR_CENTER, GridConstraints.FILL_BOTH, GridConstraints.SIZEPOLICY_CAN_SHRINK | GridConstraints.SIZEPOLICY_CAN_GROW, GridConstraints.SIZEPOLICY_CAN_SHRINK | GridConstraints.SIZEPOLICY_CAN_GROW, null, null, null, 0, false));
        ventasButton = new JButton ();
        ventasButton.setBackground (new Color (-12406529));
        ventasButton.setForeground (new Color (-1));
        ventasButton.setText ("Ventas");
        panel4.add (ventasButton, new GridConstraints (0, 0, 1, 1, GridConstraints.ANCHOR_CENTER, GridConstraints.FILL_BOTH, GridConstraints.SIZEPOLICY_CAN_SHRINK | GridConstraints.SIZEPOLICY_CAN_GROW, GridConstraints.SIZEPOLICY_FIXED, null, null, null, 0, false));
        productosButton = new JButton ();
        productosButton.setBackground (new Color (-12406529));
        productosButton.setForeground (new Color (-1));
        productosButton.setText ("Productos");
        panel4.add (productosButton, new GridConstraints (1, 0, 1, 1, GridConstraints.ANCHOR_CENTER, GridConstraints.FILL_BOTH, GridConstraints.SIZEPOLICY_CAN_SHRINK | GridConstraints.SIZEPOLICY_CAN_GROW, GridConstraints.SIZEPOLICY_FIXED, null, null, null, 0, false));
        historialButton = new JButton ();
        historialButton.setBackground (new Color (-12406529));
        historialButton.setForeground (new Color (-1));
        historialButton.setText ("Historial");
        panel4.add (historialButton, new GridConstraints (2, 0, 1, 1, GridConstraints.ANCHOR_CENTER, GridConstraints.FILL_BOTH, GridConstraints.SIZEPOLICY_CAN_SHRINK | GridConstraints.SIZEPOLICY_CAN_GROW, GridConstraints.SIZEPOLICY_FIXED, null, null, null, 0, false));
        informacionButton = new JButton ();
        informacionButton.setBackground (new Color (-12406529));
        informacionButton.setForeground (new Color (-1));
        informacionButton.setText ("InformaciÃ³n");
        panel4.add (informacionButton, new GridConstraints (3, 0, 1, 1, GridConstraints.ANCHOR_CENTER, GridConstraints.FILL_BOTH, GridConstraints.SIZEPOLICY_CAN_SHRINK | GridConstraints.SIZEPOLICY_CAN_GROW, GridConstraints.SIZEPOLICY_FIXED, null, null, null, 0, false));
        contenidoPane = new JPanel ();
        contenidoPane.setLayout (new GridLayoutManager (2, 3, new Insets (0, 5, 0, 5), -1, -1));
        contenidoPane.setBackground (new Color (-1));
        panel3.add (contenidoPane, new GridConstraints (0, 1, 1, 1, GridConstraints.ANCHOR_CENTER, GridConstraints.FILL_BOTH, GridConstraints.SIZEPOLICY_CAN_SHRINK | GridConstraints.SIZEPOLICY_CAN_GROW, GridConstraints.SIZEPOLICY_CAN_SHRINK | GridConstraints.SIZEPOLICY_CAN_GROW, null, null, null, 0, false));
        final JPanel panel5 = new JPanel ();
        panel5.setLayout (new GridLayoutManager (1, 1, new Insets (0, 0, 0, 0), -1, -1));
        panel5.setBackground (new Color (-1));
        contenidoPane.add (panel5, new GridConstraints (0, 0, 1, 3, GridConstraints.ANCHOR_CENTER, GridConstraints.FILL_BOTH, GridConstraints.SIZEPOLICY_CAN_SHRINK | GridConstraints.SIZEPOLICY_CAN_GROW, GridConstraints.SIZEPOLICY_CAN_SHRINK | GridConstraints.SIZEPOLICY_CAN_GROW, null, null, null, 0, false));
        pestanaLabel = new JLabel ();
        pestanaLabel.setEnabled (true);
        Font pestanaLabelFont = this.$$$getFont$$$ (null, -1, 16, pestanaLabel.getFont ());
        if ( pestanaLabelFont != null ) pestanaLabel.setFont (pestanaLabelFont);
        pestanaLabel.setForeground (new Color (-16777216));
        pestanaLabel.setText ("Ventas");
        panel5.add (pestanaLabel, new GridConstraints (0, 0, 1, 1, GridConstraints.ANCHOR_CENTER, GridConstraints.FILL_NONE, GridConstraints.SIZEPOLICY_FIXED, GridConstraints.SIZEPOLICY_FIXED, null, null, null, 0, false));
        final Spacer spacer1 = new Spacer ();
        contenidoPane.add (spacer1, new GridConstraints (1, 2, 1, 1, GridConstraints.ANCHOR_CENTER, GridConstraints.FILL_VERTICAL, 1, GridConstraints.SIZEPOLICY_WANT_GROW, null, null, null, 0, false));
        final JPanel panel6 = new JPanel ();
        panel6.setLayout (new GridLayoutManager (2, 3, new Insets (0, 0, 0, 0), -1, -1));
        panel6.setBackground (new Color (-1));
        panel6.setForeground (new Color (-16777216));
        contenidoPane.add (panel6, new GridConstraints (1, 1, 1, 1, GridConstraints.ANCHOR_CENTER, GridConstraints.FILL_BOTH, GridConstraints.SIZEPOLICY_CAN_SHRINK | GridConstraints.SIZEPOLICY_CAN_GROW, GridConstraints.SIZEPOLICY_CAN_SHRINK | GridConstraints.SIZEPOLICY_CAN_GROW, null, null, null, 0, false));
        final JPanel panel7 = new JPanel ();
        panel7.setLayout (new GridLayoutManager (2, 2, new Insets (0, 0, 0, 0), -1, -1));
        panel7.setBackground (new Color (-1));
        panel7.setForeground (new Color (-16777216));
        panel6.add (panel7, new GridConstraints (0, 0, 1, 3, GridConstraints.ANCHOR_CENTER, GridConstraints.FILL_BOTH, GridConstraints.SIZEPOLICY_CAN_SHRINK | GridConstraints.SIZEPOLICY_CAN_GROW, GridConstraints.SIZEPOLICY_CAN_SHRINK | GridConstraints.SIZEPOLICY_CAN_GROW, null, null, null, 0, false));
        final JPanel panel8 = new JPanel ();
        panel8.setLayout (new GridLayoutManager (1, 1, new Insets (0, 0, 0, 0), -1, -1));
        panel8.setBackground (new Color (-1));
        panel8.setForeground (new Color (-16777216));
        panel7.add (panel8, new GridConstraints (0, 0, 1, 1, GridConstraints.ANCHOR_CENTER, GridConstraints.FILL_BOTH, GridConstraints.SIZEPOLICY_CAN_SHRINK | GridConstraints.SIZEPOLICY_CAN_GROW, GridConstraints.SIZEPOLICY_CAN_SHRINK | GridConstraints.SIZEPOLICY_CAN_GROW, null, null, null, 0, false));
        panel8.setBorder (BorderFactory.createTitledBorder (null, "Periodo", TitledBorder.DEFAULT_JUSTIFICATION, TitledBorder.DEFAULT_POSITION, null, null));
        periodoBox = new JComboBox ();
        periodoBox.setBackground (new Color (-1));
        periodoBox.setForeground (new Color (-16777216));
        final DefaultComboBoxModel defaultComboBoxModel1 = new DefaultComboBoxModel ();
        defaultComboBoxModel1.addElement ("Hoy");
        defaultComboBoxModel1.addElement ("Ayer");
        defaultComboBoxModel1.addElement ("Ultima semana");
        defaultComboBoxModel1.addElement ("Ultimo mes");
        defaultComboBoxModel1.addElement ("Ultimo trimestre");
        defaultComboBoxModel1.addElement ("Ultimo semestre");
        defaultComboBoxModel1.addElement ("Ultimo aÃ±o");
        defaultComboBoxModel1.addElement ("Todos los tiempos");
        periodoBox.setModel (defaultComboBoxModel1);
        panel8.add (periodoBox, new GridConstraints (0, 0, 1, 1, GridConstraints.ANCHOR_WEST, GridConstraints.FILL_HORIZONTAL, GridConstraints.SIZEPOLICY_CAN_GROW, GridConstraints.SIZEPOLICY_FIXED, null, null, null, 0, false));
        final JPanel panel9 = new JPanel ();
        panel9.setLayout (new GridLayoutManager (2, 1, new Insets (0, 0, 0, 0), -1, -1));
        panel9.setBackground (new Color (-1));
        panel9.setForeground (new Color (-16777216));
        panel7.add (panel9, new GridConstraints (0, 1, 2, 1, GridConstraints.ANCHOR_CENTER, GridConstraints.FILL_BOTH, GridConstraints.SIZEPOLICY_CAN_SHRINK | GridConstraints.SIZEPOLICY_CAN_GROW, GridConstraints.SIZEPOLICY_CAN_SHRINK | GridConstraints.SIZEPOLICY_CAN_GROW, null, null, null, 0, false));
        generarGraficaButton = new JButton ();
        generarGraficaButton.setBackground (new Color (-12406529));
        generarGraficaButton.setForeground (new Color (-1));
        generarGraficaButton.setText ("Generar GrÃ¡fica");
        panel9.add (generarGraficaButton, new GridConstraints (0, 0, 1, 1, GridConstraints.ANCHOR_CENTER, GridConstraints.FILL_HORIZONTAL, GridConstraints.SIZEPOLICY_CAN_SHRINK | GridConstraints.SIZEPOLICY_CAN_GROW, GridConstraints.SIZEPOLICY_FIXED, null, null, null, 0, false));
        contabilizarButton = new JButton ();
        contabilizarButton.setBackground (new Color (-12406529));
        contabilizarButton.setForeground (new Color (-1));
        contabilizarButton.setText ("Contabilizar");
        panel9.add (contabilizarButton, new GridConstraints (1, 0, 1, 1, GridConstraints.ANCHOR_CENTER, GridConstraints.FILL_HORIZONTAL, GridConstraints.SIZEPOLICY_CAN_SHRINK | GridConstraints.SIZEPOLICY_CAN_GROW, GridConstraints.SIZEPOLICY_FIXED, null, null, null, 0, false));
        final JPanel panel10 = new JPanel ();
        panel10.setLayout (new GridLayoutManager (1, 1, new Insets (0, 0, 0, 0), -1, -1));
        panel10.setBackground (new Color (-1));
        panel10.setForeground (new Color (-16777216));
        panel7.add (panel10, new GridConstraints (1, 0, 1, 1, GridConstraints.ANCHOR_CENTER, GridConstraints.FILL_BOTH, GridConstraints.SIZEPOLICY_CAN_SHRINK | GridConstraints.SIZEPOLICY_CAN_GROW, GridConstraints.SIZEPOLICY_CAN_SHRINK | GridConstraints.SIZEPOLICY_CAN_GROW, null, null, null, 0, false));
        panel10.setBorder (BorderFactory.createTitledBorder (null, "Codigo", TitledBorder.DEFAULT_JUSTIFICATION, TitledBorder.DEFAULT_POSITION, null, null));
        codigoField = new JTextField ();
        codigoField.setBackground (new Color (-1));
        codigoField.setEnabled (false);
        codigoField.setForeground (new Color (-16777216));
        panel10.add (codigoField, new GridConstraints (0, 0, 1, 1, GridConstraints.ANCHOR_WEST, GridConstraints.FILL_HORIZONTAL, GridConstraints.SIZEPOLICY_WANT_GROW, GridConstraints.SIZEPOLICY_FIXED, null, new Dimension (150, -1), null, 0, false));
        graphPane = new JPanel ();
        graphPane.setLayout (new FlowLayout (FlowLayout.CENTER, 0, 0));
        graphPane.setBackground (new Color (-1));
        graphPane.setForeground (new Color (-16777216));
        panel6.add (graphPane, new GridConstraints (1, 1, 1, 1, GridConstraints.ANCHOR_CENTER, GridConstraints.FILL_BOTH, GridConstraints.SIZEPOLICY_CAN_SHRINK | GridConstraints.SIZEPOLICY_CAN_GROW, GridConstraints.SIZEPOLICY_CAN_SHRINK | GridConstraints.SIZEPOLICY_CAN_GROW, new Dimension (900, 540), new Dimension (900, 540), new Dimension (1000, 600), 0, false));
        graphPane.setBorder (BorderFactory.createTitledBorder (BorderFactory.createLineBorder (Color.black), null, TitledBorder.DEFAULT_JUSTIFICATION, TitledBorder.DEFAULT_POSITION, null, null));
        final Spacer spacer2 = new Spacer ();
        panel6.add (spacer2, new GridConstraints (1, 0, 1, 1, GridConstraints.ANCHOR_CENTER, GridConstraints.FILL_VERTICAL, 1, GridConstraints.SIZEPOLICY_WANT_GROW, null, null, null, 0, false));
        final JPanel panel11 = new JPanel ();
        panel11.setLayout (new GridLayoutManager (1, 1, new Insets (0, 0, 0, 0), -1, -1));
        panel6.add (panel11, new GridConstraints (1, 2, 1, 1, GridConstraints.ANCHOR_CENTER, GridConstraints.FILL_BOTH, GridConstraints.SIZEPOLICY_CAN_SHRINK | GridConstraints.SIZEPOLICY_CAN_GROW, GridConstraints.SIZEPOLICY_CAN_SHRINK | GridConstraints.SIZEPOLICY_CAN_GROW, null, null, null, 0, false));
        tablaCount = new JTable ();
        panel11.add (tablaCount, new GridConstraints (0, 0, 1, 1, GridConstraints.ANCHOR_CENTER, GridConstraints.FILL_BOTH, GridConstraints.SIZEPOLICY_WANT_GROW, GridConstraints.SIZEPOLICY_WANT_GROW, null, new Dimension (150, 50), null, 0, false));
        final Spacer spacer3 = new Spacer ();
        contenidoPane.add (spacer3, new GridConstraints (1, 0, 1, 1, GridConstraints.ANCHOR_CENTER, GridConstraints.FILL_VERTICAL, 1, GridConstraints.SIZEPOLICY_WANT_GROW, null, null, null, 0, false));
        final Spacer spacer4 = new Spacer ();
        panel3.add (spacer4, new GridConstraints (1, 1, 1, 1, GridConstraints.ANCHOR_CENTER, GridConstraints.FILL_HORIZONTAL, GridConstraints.SIZEPOLICY_WANT_GROW, 1, null, null, null, 0, false));
    }

    /**
     * @noinspection ALL
     */
    private Font $$$getFont$$$ ( String fontName, int style, int size, Font currentFont ){
        if ( currentFont == null ) return null;
        String resultName;
        if ( fontName == null ) {
            resultName = currentFont.getName ();
        } else {
            Font testFont = new Font (fontName, Font.PLAIN, 10);
            if ( testFont.canDisplay ('a') && testFont.canDisplay ('1') ) {
                resultName = fontName;
            } else {
                resultName = currentFont.getName ();
            }
        }
        Font font = new Font (resultName, style >= 0 ? style : currentFont.getStyle (), size >= 0 ? size : currentFont.getSize ());
        boolean isMac = System.getProperty ("os.name", "").toLowerCase (Locale.ENGLISH).startsWith ("mac");
        Font fontWithFallback = isMac ? new Font (font.getFamily (), font.getStyle (), font.getSize ()) : new StyleContext ().getFont (font.getFamily (), font.getStyle (), font.getSize ());
        return fontWithFallback instanceof FontUIResource ? fontWithFallback : new FontUIResource (fontWithFallback);
    }

    /**
     * @noinspection ALL
     */
    public JComponent $$$getRootComponent$$$ (){
        return reportesPanel;
    }

}
