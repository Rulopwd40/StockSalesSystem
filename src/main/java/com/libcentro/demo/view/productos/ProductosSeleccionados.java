package com.libcentro.demo.view.productos;

import com.intellij.uiDesigner.core.GridConstraints;
import com.intellij.uiDesigner.core.GridLayoutManager;
import com.intellij.uiDesigner.core.Spacer;

import javax.swing.*;
import javax.swing.border.TitledBorder;
import java.awt.*;

public class ProductosSeleccionados extends JDialog {
    private JTable table;
    private JTextField precioField;
    private JComboBox categoriaBox;
    private JButton okButton;
    private JPanel panelAct;
    private JButton actualizarPrecio;
    private JButton actualizarCategoria;


    public ProductosSeleccionados (){
        setContentPane (panelAct);
        setSize (600, 400);
        setLocationRelativeTo (null);
        setFocusable (true);
        setModal (true);
        setResizable (false);
    }

    public JTextField getPrecioField (){
        return precioField;
    }

    public JComboBox getCategoriaBox (){
        return categoriaBox;
    }

    public JButton getOkButton (){
        return okButton;
    }


    public JTable getTable (){
        return table;
    }

    public JButton getActualizarPrecio (){
        return actualizarPrecio;
    }

    public JButton getActualizarCategoria (){
        return actualizarCategoria;
    }

    {
// GUI initializer generated by IntelliJ IDEA GUI Designer
// >>> IMPORTANT!! <<<
// DO NOT EDIT OR ADD ANY CODE HERE!
        $$$setupUI$$$ ();
    }

    /**
     * Method generated by IntelliJ IDEA GUI Designer
     * >>> IMPORTANT!! <<<
     * DO NOT edit this method OR call it in your code!
     *
     * @noinspection ALL
     */
    private void $$$setupUI$$$ (){
        panelAct = new JPanel ();
        panelAct.setLayout (new GridLayoutManager (3, 2, new Insets (0, 0, 0, 0), -1, -1));
        panelAct.setBackground (new Color (-1));
        final JLabel label1 = new JLabel ();
        label1.setBackground (new Color (-1));
        label1.setForeground (new Color (-16777216));
        label1.setText ("Actualizar Productos Seleccionados");
        panelAct.add (label1, new GridConstraints (0, 0, 1, 2, GridConstraints.ANCHOR_CENTER, GridConstraints.FILL_NONE, GridConstraints.SIZEPOLICY_FIXED, GridConstraints.SIZEPOLICY_FIXED, null, null, null, 0, false));
        final JPanel panel1 = new JPanel ();
        panel1.setLayout (new GridLayoutManager (4, 1, new Insets (0, 0, 5, 5), -1, -1));
        panel1.setBackground (new Color (-1));
        panelAct.add (panel1, new GridConstraints (1, 1, 2, 1, GridConstraints.ANCHOR_CENTER, GridConstraints.FILL_BOTH, GridConstraints.SIZEPOLICY_CAN_SHRINK | GridConstraints.SIZEPOLICY_CAN_GROW, GridConstraints.SIZEPOLICY_CAN_SHRINK | GridConstraints.SIZEPOLICY_CAN_GROW, null, null, null, 0, false));
        final JPanel panel2 = new JPanel ();
        panel2.setLayout (new GridLayoutManager (2, 1, new Insets (0, 0, 0, 0), -1, -1));
        panel2.setBackground (new Color (-1));
        panel2.setForeground (new Color (-16777216));
        panel1.add (panel2, new GridConstraints (0, 0, 1, 1, GridConstraints.ANCHOR_CENTER, GridConstraints.FILL_BOTH, GridConstraints.SIZEPOLICY_CAN_SHRINK | GridConstraints.SIZEPOLICY_CAN_GROW, GridConstraints.SIZEPOLICY_CAN_SHRINK | GridConstraints.SIZEPOLICY_CAN_GROW, null, null, null, 0, false));
        panel2.setBorder (BorderFactory.createTitledBorder (null, "Precio(%)", TitledBorder.DEFAULT_JUSTIFICATION, TitledBorder.DEFAULT_POSITION, null, null));
        precioField = new JTextField ();
        precioField.setBackground (new Color (-1));
        precioField.setText ("");
        panel2.add (precioField, new GridConstraints (0, 0, 1, 1, GridConstraints.ANCHOR_WEST, GridConstraints.FILL_HORIZONTAL, GridConstraints.SIZEPOLICY_WANT_GROW, GridConstraints.SIZEPOLICY_FIXED, null, new Dimension (150, -1), null, 0, false));
        actualizarPrecio = new JButton ();
        actualizarPrecio.setBackground (new Color (-12406529));
        actualizarPrecio.setForeground (new Color (-1));
        actualizarPrecio.setHideActionText (false);
        actualizarPrecio.setText ("Actualizar");
        panel2.add (actualizarPrecio, new GridConstraints (1, 0, 1, 1, GridConstraints.ANCHOR_CENTER, GridConstraints.FILL_HORIZONTAL, GridConstraints.SIZEPOLICY_CAN_SHRINK | GridConstraints.SIZEPOLICY_CAN_GROW, GridConstraints.SIZEPOLICY_FIXED, null, null, null, 0, false));
        final JPanel panel3 = new JPanel ();
        panel3.setLayout (new GridLayoutManager (2, 1, new Insets (0, 0, 0, 0), -1, -1));
        panel3.setBackground (new Color (-1));
        panel3.setForeground (new Color (-16777216));
        panel1.add (panel3, new GridConstraints (1, 0, 1, 1, GridConstraints.ANCHOR_CENTER, GridConstraints.FILL_BOTH, GridConstraints.SIZEPOLICY_CAN_SHRINK | GridConstraints.SIZEPOLICY_CAN_GROW, GridConstraints.SIZEPOLICY_CAN_SHRINK | GridConstraints.SIZEPOLICY_CAN_GROW, null, null, null, 0, false));
        panel3.setBorder (BorderFactory.createTitledBorder (null, "Categoria", TitledBorder.DEFAULT_JUSTIFICATION, TitledBorder.DEFAULT_POSITION, null, null));
        categoriaBox = new JComboBox ();
        categoriaBox.setBackground (new Color (-1));
        categoriaBox.setEditable (false);
        panel3.add (categoriaBox, new GridConstraints (0, 0, 1, 1, GridConstraints.ANCHOR_WEST, GridConstraints.FILL_HORIZONTAL, GridConstraints.SIZEPOLICY_CAN_GROW, GridConstraints.SIZEPOLICY_FIXED, null, null, null, 0, false));
        actualizarCategoria = new JButton ();
        actualizarCategoria.setBackground (new Color (-12406529));
        actualizarCategoria.setForeground (new Color (-1));
        actualizarCategoria.setText ("Actualizar");
        panel3.add (actualizarCategoria, new GridConstraints (1, 0, 1, 1, GridConstraints.ANCHOR_CENTER, GridConstraints.FILL_HORIZONTAL, GridConstraints.SIZEPOLICY_CAN_SHRINK | GridConstraints.SIZEPOLICY_CAN_GROW, GridConstraints.SIZEPOLICY_FIXED, null, null, null, 0, false));
        final JPanel panel4 = new JPanel ();
        panel4.setLayout (new GridLayoutManager (1, 1, new Insets (0, 0, 0, 0), -1, -1));
        panel4.setBackground (new Color (-1));
        panel1.add (panel4, new GridConstraints (3, 0, 1, 1, GridConstraints.ANCHOR_CENTER, GridConstraints.FILL_BOTH, GridConstraints.SIZEPOLICY_CAN_SHRINK | GridConstraints.SIZEPOLICY_CAN_GROW, GridConstraints.SIZEPOLICY_CAN_SHRINK | GridConstraints.SIZEPOLICY_CAN_GROW, null, null, null, 0, false));
        okButton = new JButton ();
        okButton.setBackground (new Color (-12406529));
        okButton.setForeground (new Color (-1));
        okButton.setText ("Ok");
        panel4.add (okButton, new GridConstraints (0, 0, 1, 1, GridConstraints.ANCHOR_CENTER, GridConstraints.FILL_HORIZONTAL, GridConstraints.SIZEPOLICY_CAN_SHRINK | GridConstraints.SIZEPOLICY_CAN_GROW, GridConstraints.SIZEPOLICY_FIXED, null, null, null, 0, false));
        final Spacer spacer1 = new Spacer ();
        panel1.add (spacer1, new GridConstraints (2, 0, 1, 1, GridConstraints.ANCHOR_CENTER, GridConstraints.FILL_VERTICAL, 1, GridConstraints.SIZEPOLICY_WANT_GROW, null, null, null, 0, false));
        final JPanel panel5 = new JPanel ();
        panel5.setLayout (new GridLayoutManager (1, 1, new Insets (0, 5, 5, 0), -1, -1));
        panelAct.add (panel5, new GridConstraints (1, 0, 2, 1, GridConstraints.ANCHOR_CENTER, GridConstraints.FILL_BOTH, GridConstraints.SIZEPOLICY_CAN_SHRINK | GridConstraints.SIZEPOLICY_CAN_GROW, GridConstraints.SIZEPOLICY_CAN_SHRINK | GridConstraints.SIZEPOLICY_CAN_GROW, null, null, null, 0, false));
        final JScrollPane scrollPane1 = new JScrollPane ();
        scrollPane1.setBackground (new Color (-1));
        panel5.add (scrollPane1, new GridConstraints (0, 0, 1, 1, GridConstraints.ANCHOR_CENTER, GridConstraints.FILL_BOTH, GridConstraints.SIZEPOLICY_CAN_SHRINK | GridConstraints.SIZEPOLICY_WANT_GROW, GridConstraints.SIZEPOLICY_CAN_SHRINK | GridConstraints.SIZEPOLICY_WANT_GROW, null, null, null, 0, false));
        table = new JTable ();
        scrollPane1.setViewportView (table);
    }

    /**
     * @noinspection ALL
     */
    public JComponent $$$getRootComponent$$$ (){
        return panelAct;
    }

}
